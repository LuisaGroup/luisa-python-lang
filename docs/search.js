window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "luisa_lang", "modulename": "luisa_lang", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo", "modulename": "luisa_lang.classinfo", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.GenericInstance", "modulename": "luisa_lang.classinfo", "qualname": "GenericInstance", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.GenericInstance.__init__", "modulename": "luisa_lang.classinfo", "qualname": "GenericInstance.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">origin</span><span class=\"p\">:</span> <span class=\"nb\">type</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "luisa_lang.classinfo.GenericInstance.origin", "modulename": "luisa_lang.classinfo", "qualname": "GenericInstance.origin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": type"}, {"fullname": "luisa_lang.classinfo.GenericInstance.args", "modulename": "luisa_lang.classinfo", "qualname": "GenericInstance.args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[Union[TypeVar, Type, luisa_lang.classinfo.GenericInstance, luisa_lang.classinfo.UnionType, luisa_lang.classinfo.SelfType, luisa_lang.classinfo.AnyType, luisa_lang.classinfo.LiteralType]]"}, {"fullname": "luisa_lang.classinfo.UnionType", "modulename": "luisa_lang.classinfo", "qualname": "UnionType", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.UnionType.__init__", "modulename": "luisa_lang.classinfo", "qualname": "UnionType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">types</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "luisa_lang.classinfo.UnionType.types", "modulename": "luisa_lang.classinfo", "qualname": "UnionType.types", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[Union[TypeVar, Type, luisa_lang.classinfo.GenericInstance, luisa_lang.classinfo.UnionType, luisa_lang.classinfo.SelfType, luisa_lang.classinfo.AnyType, luisa_lang.classinfo.LiteralType]]"}, {"fullname": "luisa_lang.classinfo.AnyType", "modulename": "luisa_lang.classinfo", "qualname": "AnyType", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.SelfType", "modulename": "luisa_lang.classinfo", "qualname": "SelfType", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.LiteralType", "modulename": "luisa_lang.classinfo", "qualname": "LiteralType", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.LiteralType.__init__", "modulename": "luisa_lang.classinfo", "qualname": "LiteralType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, {"fullname": "luisa_lang.classinfo.LiteralType.value", "modulename": "luisa_lang.classinfo", "qualname": "LiteralType.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "luisa_lang.classinfo.VarType", "modulename": "luisa_lang.classinfo", "qualname": "VarType", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Union[typing.TypeVar, typing.Type, luisa_lang.classinfo.GenericInstance, luisa_lang.classinfo.UnionType, luisa_lang.classinfo.SelfType, luisa_lang.classinfo.AnyType, luisa_lang.classinfo.LiteralType]"}, {"fullname": "luisa_lang.classinfo.subst_type", "modulename": "luisa_lang.classinfo", "qualname": "subst_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.MethodType", "modulename": "luisa_lang.classinfo", "qualname": "MethodType", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.MethodType.__init__", "modulename": "luisa_lang.classinfo", "qualname": "MethodType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">type_vars</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">return_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_static</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "luisa_lang.classinfo.MethodType.type_vars", "modulename": "luisa_lang.classinfo", "qualname": "MethodType.type_vars", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[TypeVar]"}, {"fullname": "luisa_lang.classinfo.MethodType.args", "modulename": "luisa_lang.classinfo", "qualname": "MethodType.args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[Tuple[str, Union[TypeVar, Type, luisa_lang.classinfo.GenericInstance, luisa_lang.classinfo.UnionType, luisa_lang.classinfo.SelfType, luisa_lang.classinfo.AnyType, luisa_lang.classinfo.LiteralType]]]"}, {"fullname": "luisa_lang.classinfo.MethodType.return_type", "modulename": "luisa_lang.classinfo", "qualname": "MethodType.return_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[TypeVar, Type, luisa_lang.classinfo.GenericInstance, luisa_lang.classinfo.UnionType, luisa_lang.classinfo.SelfType, luisa_lang.classinfo.AnyType, luisa_lang.classinfo.LiteralType]"}, {"fullname": "luisa_lang.classinfo.MethodType.env", "modulename": "luisa_lang.classinfo", "qualname": "MethodType.env", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[TypeVar, Union[TypeVar, Type, luisa_lang.classinfo.GenericInstance, luisa_lang.classinfo.UnionType, luisa_lang.classinfo.SelfType, luisa_lang.classinfo.AnyType, luisa_lang.classinfo.LiteralType]]"}, {"fullname": "luisa_lang.classinfo.MethodType.is_static", "modulename": "luisa_lang.classinfo", "qualname": "MethodType.is_static", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.classinfo.MethodType.substitute", "modulename": "luisa_lang.classinfo", "qualname": "MethodType.substitute", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">MethodType</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.ClassType", "modulename": "luisa_lang.classinfo", "qualname": "ClassType", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.classinfo.ClassType.__init__", "modulename": "luisa_lang.classinfo", "qualname": "ClassType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">type_vars</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">methods</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">MethodType</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.classinfo.ClassType.type_vars", "modulename": "luisa_lang.classinfo", "qualname": "ClassType.type_vars", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[TypeVar]"}, {"fullname": "luisa_lang.classinfo.ClassType.fields", "modulename": "luisa_lang.classinfo", "qualname": "ClassType.fields", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, Union[TypeVar, Type, luisa_lang.classinfo.GenericInstance, luisa_lang.classinfo.UnionType, luisa_lang.classinfo.SelfType, luisa_lang.classinfo.AnyType, luisa_lang.classinfo.LiteralType]]"}, {"fullname": "luisa_lang.classinfo.ClassType.methods", "modulename": "luisa_lang.classinfo", "qualname": "ClassType.methods", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, luisa_lang.classinfo.MethodType]"}, {"fullname": "luisa_lang.classinfo.ClassType.instantiate", "modulename": "luisa_lang.classinfo", "qualname": "ClassType.instantiate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">type_args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">ClassType</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.class_typeinfo", "modulename": "luisa_lang.classinfo", "qualname": "class_typeinfo", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"nb\">type</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">ClassType</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.parse_type_hint", "modulename": "luisa_lang.classinfo", "qualname": "parse_type_hint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hint</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.extract_type_vars_from_hint", "modulename": "luisa_lang.classinfo", "qualname": "extract_type_vars_from_hint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hint</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.get_type_vars", "modulename": "luisa_lang.classinfo", "qualname": "get_type_vars", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.parse_func_signature", "modulename": "luisa_lang.classinfo", "qualname": "parse_func_signature", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"nb\">object</span>,</span><span class=\"param\">\t<span class=\"n\">globalns</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">foreign_type_vars</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">is_static</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">MethodType</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.is_static", "modulename": "luisa_lang.classinfo", "qualname": "is_static", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"nb\">type</span>, </span><span class=\"param\"><span class=\"n\">method_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.classinfo.register_class", "modulename": "luisa_lang.classinfo", "qualname": "register_class", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"nb\">type</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen", "modulename": "luisa_lang.codegen", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.base", "modulename": "luisa_lang.codegen.base", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.base.CodeGen", "modulename": "luisa_lang.codegen.base", "qualname": "CodeGen", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.base.ScratchBuffer", "modulename": "luisa_lang.codegen.base", "qualname": "ScratchBuffer", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.base.ScratchBuffer.__init__", "modulename": "luisa_lang.codegen.base", "qualname": "ScratchBuffer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "luisa_lang.codegen.base.ScratchBuffer.body", "modulename": "luisa_lang.codegen.base", "qualname": "ScratchBuffer.body", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.codegen.base.ScratchBuffer.indent", "modulename": "luisa_lang.codegen.base", "qualname": "ScratchBuffer.indent", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.codegen.base.ScratchBuffer.writeln", "modulename": "luisa_lang.codegen.base", "qualname": "ScratchBuffer.writeln", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.base.ScratchBuffer.write", "modulename": "luisa_lang.codegen.base", "qualname": "ScratchBuffer.write", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.base.ScratchBuffer.merge", "modulename": "luisa_lang.codegen.base", "qualname": "ScratchBuffer.merge", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">codegen</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">ScratchBuffer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp", "modulename": "luisa_lang.codegen.cpp", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.cpp.TypeCodeGenCache", "modulename": "luisa_lang.codegen.cpp", "qualname": "TypeCodeGenCache", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.cpp.TypeCodeGenCache.cache", "modulename": "luisa_lang.codegen.cpp", "qualname": "TypeCodeGenCache.cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[luisa_lang.hir.Type, str]"}, {"fullname": "luisa_lang.codegen.cpp.TypeCodeGenCache.impl", "modulename": "luisa_lang.codegen.cpp", "qualname": "TypeCodeGenCache.impl", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.codegen.base.ScratchBuffer"}, {"fullname": "luisa_lang.codegen.cpp.TypeCodeGenCache.gen", "modulename": "luisa_lang.codegen.cpp", "qualname": "TypeCodeGenCache.gen", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.TypeCodeGenCache.gen_impl", "modulename": "luisa_lang.codegen.cpp", "qualname": "TypeCodeGenCache.gen_impl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.map_builtin_to_cpp_func", "modulename": "luisa_lang.codegen.cpp", "qualname": "map_builtin_to_cpp_func", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.mangle_name", "modulename": "luisa_lang.codegen.cpp", "qualname": "mangle_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.Mangling", "modulename": "luisa_lang.codegen.cpp", "qualname": "Mangling", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.cpp.Mangling.cache", "modulename": "luisa_lang.codegen.cpp", "qualname": "Mangling.cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[luisa_lang.hir.Type | luisa_lang.hir.Function, str]"}, {"fullname": "luisa_lang.codegen.cpp.Mangling.mangle", "modulename": "luisa_lang.codegen.cpp", "qualname": "Mangling.mangle", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.Mangling.mangle_impl", "modulename": "luisa_lang.codegen.cpp", "qualname": "Mangling.mangle_impl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.CppCodeGen", "modulename": "luisa_lang.codegen.cpp", "qualname": "CppCodeGen", "kind": "class", "doc": "<p></p>\n", "bases": "luisa_lang.codegen.base.CodeGen"}, {"fullname": "luisa_lang.codegen.cpp.CppCodeGen.type_cache", "modulename": "luisa_lang.codegen.cpp", "qualname": "CppCodeGen.type_cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.codegen.cpp.TypeCodeGenCache"}, {"fullname": "luisa_lang.codegen.cpp.CppCodeGen.func_cache", "modulename": "luisa_lang.codegen.cpp", "qualname": "CppCodeGen.func_cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[int, Tuple[luisa_lang.hir.Function, str]]"}, {"fullname": "luisa_lang.codegen.cpp.CppCodeGen.mangling", "modulename": "luisa_lang.codegen.cpp", "qualname": "CppCodeGen.mangling", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.codegen.cpp.Mangling"}, {"fullname": "luisa_lang.codegen.cpp.CppCodeGen.generated_code", "modulename": "luisa_lang.codegen.cpp", "qualname": "CppCodeGen.generated_code", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.codegen.base.ScratchBuffer"}, {"fullname": "luisa_lang.codegen.cpp.CppCodeGen.gen_function", "modulename": "luisa_lang.codegen.cpp", "qualname": "CppCodeGen.gen_function", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.CppCodeGen.finalize_code", "modulename": "luisa_lang.codegen.cpp", "qualname": "CppCodeGen.finalize_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.__init__", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">codegen</span><span class=\"o\">.</span><span class=\"n\">cpp</span><span class=\"o\">.</span><span class=\"n\">CppCodeGen</span>,</span><span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span></span>)</span>"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.base", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.base", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.codegen.cpp.CppCodeGen"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.body", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.body", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.codegen.base.ScratchBuffer"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.name", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.signature", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.signature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.func", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.func", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Function"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.params", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Set[str]"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.node_map", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.node_map", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[luisa_lang.hir.Node, str]"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.vid_cnt", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.vid_cnt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_var", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_var", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">var</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Var</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.new_vid", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.new_vid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_ref", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_ref", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ref</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_func", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_func", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_value_or_ref", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_value_or_ref", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_node_checked", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_node_checked", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_expr", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_expr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_node", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_node", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_bb", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_bb", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bb</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen_locals", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen_locals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp.FuncCodeGen.gen", "modulename": "luisa_lang.codegen.cpp", "qualname": "FuncCodeGen.gen", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.cpp_lib", "modulename": "luisa_lang.codegen.cpp_lib", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.cpp_lib.CPP_LIB_COMPRESSED", "modulename": "luisa_lang.codegen.cpp_lib", "qualname": "CPP_LIB_COMPRESSED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;&#x27;"}, {"fullname": "luisa_lang.codegen.rust_api", "modulename": "luisa_lang.codegen.rust_api", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.rust_api.TypeCodeGenCache", "modulename": "luisa_lang.codegen.rust_api", "qualname": "TypeCodeGenCache", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.codegen.rust_api.TypeCodeGenCache.cache", "modulename": "luisa_lang.codegen.rust_api", "qualname": "TypeCodeGenCache.cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[luisa_lang.hir.Type, str]"}, {"fullname": "luisa_lang.codegen.rust_api.TypeCodeGenCache.impl", "modulename": "luisa_lang.codegen.rust_api", "qualname": "TypeCodeGenCache.impl", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.codegen.base.ScratchBuffer"}, {"fullname": "luisa_lang.codegen.rust_api.TypeCodeGenCache.gen", "modulename": "luisa_lang.codegen.rust_api", "qualname": "TypeCodeGenCache.gen", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.rust_api.TypeCodeGenCache.gen_impl", "modulename": "luisa_lang.codegen.rust_api", "qualname": "TypeCodeGenCache.gen_impl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.codegen.rust_api.RustAPIGenerator", "modulename": "luisa_lang.codegen.rust_api", "qualname": "RustAPIGenerator", "kind": "class", "doc": "<p>Generates Rust API code for a given DSL module</p>\n"}, {"fullname": "luisa_lang.hir", "modulename": "luisa_lang.hir", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.PATH_PREFIX", "modulename": "luisa_lang.hir", "qualname": "PATH_PREFIX", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;luisa_lang&#x27;"}, {"fullname": "luisa_lang.hir.FunctionTemplateResolvingArgs", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplateResolvingArgs", "kind": "variable", "doc": "<p>[Function parameter name, Type or Value].\nThe reason for using parameter name instead of GenericParameter is that python supports passing type[T] as a parameter,</p>\n", "default_value": "typing.List[typing.Tuple[str, typing.Union[ForwardRef(&#x27;Type&#x27;), typing.Any]]]"}, {"fullname": "luisa_lang.hir.FunctionTemplateResolvingFunc", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplateResolvingFunc", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Callable[[typing.List[typing.Tuple[str, typing.Union[ForwardRef(&#x27;Type&#x27;), typing.Any]]]], typing.Union[ForwardRef(&#x27;Function&#x27;), ForwardRef(&#x27;TemplateMatchingError&#x27;)]]"}, {"fullname": "luisa_lang.hir.FuncProperties", "modulename": "luisa_lang.hir", "qualname": "FuncProperties", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.FuncProperties.inline", "modulename": "luisa_lang.hir", "qualname": "FuncProperties.inline", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[bool, Literal[&#x27;never&#x27;, &#x27;always&#x27;]]"}, {"fullname": "luisa_lang.hir.FuncProperties.export", "modulename": "luisa_lang.hir", "qualname": "FuncProperties.export", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.FuncProperties.byref", "modulename": "luisa_lang.hir", "qualname": "FuncProperties.byref", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Set[str]"}, {"fullname": "luisa_lang.hir.FuncProperties.returning_ref", "modulename": "luisa_lang.hir", "qualname": "FuncProperties.returning_ref", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.FunctionTemplate", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate", "kind": "class", "doc": "<p>Contains a delegate that can be resolved to a function.\nThis is to support generic functions as well as meta-programming.\nSince each time the function is called in DSL, user meta-programming code in the function body\nwill be called, we need to keep the AST of the function.</p>\n"}, {"fullname": "luisa_lang.hir.FunctionTemplate.__init__", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">parsing_func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]],</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TemplateMatchingError</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">is_generic</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "luisa_lang.hir.FunctionTemplate.parsing_func", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.parsing_func", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Callable[[List[Tuple[str, Union[luisa_lang.hir.Type, Any]]]], Union[luisa_lang.hir.Function, luisa_lang.hir.TemplateMatchingError]]"}, {"fullname": "luisa_lang.hir.FunctionTemplate.is_generic", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.is_generic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.FunctionTemplate.name", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.FunctionTemplate.params", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[str]"}, {"fullname": "luisa_lang.hir.FunctionTemplate.props", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.props", "kind": "variable", "doc": "<p>Function parameters (NOT type parameters)</p>\n", "annotation": ": Optional[luisa_lang.hir.FuncProperties]"}, {"fullname": "luisa_lang.hir.FunctionTemplate.resolve", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.resolve", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TemplateMatchingError</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionTemplate.reset", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionTemplate.inline_hint", "modulename": "luisa_lang.hir", "qualname": "FunctionTemplate.inline_hint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;never&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;always&#39;</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.DynamicIndex", "modulename": "luisa_lang.hir", "qualname": "DynamicIndex", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.Type", "modulename": "luisa_lang.hir", "qualname": "Type", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, {"fullname": "luisa_lang.hir.Type.methods", "modulename": "luisa_lang.hir", "qualname": "Type.methods", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, Union[luisa_lang.hir.Function, luisa_lang.hir.FunctionTemplate]]"}, {"fullname": "luisa_lang.hir.Type.is_builtin", "modulename": "luisa_lang.hir", "qualname": "Type.is_builtin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.Type.size", "modulename": "luisa_lang.hir", "qualname": "Type.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.Type.align", "modulename": "luisa_lang.hir", "qualname": "Type.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.Type.member", "modulename": "luisa_lang.hir", "qualname": "Type.member", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.Type.method", "modulename": "luisa_lang.hir", "qualname": "Type.method", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionTemplate</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.Type.is_concrete", "modulename": "luisa_lang.hir", "qualname": "Type.is_concrete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.LiteralType", "modulename": "luisa_lang.hir", "qualname": "LiteralType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.LiteralType.__init__", "modulename": "luisa_lang.hir", "qualname": "LiteralType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, {"fullname": "luisa_lang.hir.LiteralType.value", "modulename": "luisa_lang.hir", "qualname": "LiteralType.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "luisa_lang.hir.LiteralType.size", "modulename": "luisa_lang.hir", "qualname": "LiteralType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.LiteralType.align", "modulename": "luisa_lang.hir", "qualname": "LiteralType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.LiteralType.is_concrete", "modulename": "luisa_lang.hir", "qualname": "LiteralType.is_concrete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.AnyType", "modulename": "luisa_lang.hir", "qualname": "AnyType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.AnyType.size", "modulename": "luisa_lang.hir", "qualname": "AnyType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.AnyType.align", "modulename": "luisa_lang.hir", "qualname": "AnyType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.UnitType", "modulename": "luisa_lang.hir", "qualname": "UnitType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.UnitType.size", "modulename": "luisa_lang.hir", "qualname": "UnitType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.UnitType.align", "modulename": "luisa_lang.hir", "qualname": "UnitType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.ScalarType", "modulename": "luisa_lang.hir", "qualname": "ScalarType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.BoolType", "modulename": "luisa_lang.hir", "qualname": "BoolType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ScalarType"}, {"fullname": "luisa_lang.hir.BoolType.size", "modulename": "luisa_lang.hir", "qualname": "BoolType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.BoolType.align", "modulename": "luisa_lang.hir", "qualname": "BoolType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.IntType", "modulename": "luisa_lang.hir", "qualname": "IntType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ScalarType"}, {"fullname": "luisa_lang.hir.IntType.__init__", "modulename": "luisa_lang.hir", "qualname": "IntType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bits</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">signed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "luisa_lang.hir.IntType.bits", "modulename": "luisa_lang.hir", "qualname": "IntType.bits", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.hir.IntType.signed", "modulename": "luisa_lang.hir", "qualname": "IntType.signed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.IntType.size", "modulename": "luisa_lang.hir", "qualname": "IntType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.IntType.align", "modulename": "luisa_lang.hir", "qualname": "IntType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GenericFloatType", "modulename": "luisa_lang.hir", "qualname": "GenericFloatType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ScalarType"}, {"fullname": "luisa_lang.hir.GenericFloatType.size", "modulename": "luisa_lang.hir", "qualname": "GenericFloatType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GenericFloatType.align", "modulename": "luisa_lang.hir", "qualname": "GenericFloatType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GenericFloatType.is_concrete", "modulename": "luisa_lang.hir", "qualname": "GenericFloatType.is_concrete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GenericIntType", "modulename": "luisa_lang.hir", "qualname": "GenericIntType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ScalarType"}, {"fullname": "luisa_lang.hir.GenericIntType.size", "modulename": "luisa_lang.hir", "qualname": "GenericIntType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GenericIntType.align", "modulename": "luisa_lang.hir", "qualname": "GenericIntType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GenericIntType.is_concrete", "modulename": "luisa_lang.hir", "qualname": "GenericIntType.is_concrete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FloatType", "modulename": "luisa_lang.hir", "qualname": "FloatType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ScalarType"}, {"fullname": "luisa_lang.hir.FloatType.__init__", "modulename": "luisa_lang.hir", "qualname": "FloatType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bits</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "luisa_lang.hir.FloatType.bits", "modulename": "luisa_lang.hir", "qualname": "FloatType.bits", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.hir.FloatType.size", "modulename": "luisa_lang.hir", "qualname": "FloatType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FloatType.align", "modulename": "luisa_lang.hir", "qualname": "FloatType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.VectorType", "modulename": "luisa_lang.hir", "qualname": "VectorType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.VectorType.__init__", "modulename": "luisa_lang.hir", "qualname": "VectorType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>, </span><span class=\"param\"><span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">align</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.VectorType.element", "modulename": "luisa_lang.hir", "qualname": "VectorType.element", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type"}, {"fullname": "luisa_lang.hir.VectorType.count", "modulename": "luisa_lang.hir", "qualname": "VectorType.count", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.hir.VectorType.size", "modulename": "luisa_lang.hir", "qualname": "VectorType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.VectorType.align", "modulename": "luisa_lang.hir", "qualname": "VectorType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.VectorType.member", "modulename": "luisa_lang.hir", "qualname": "VectorType.member", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.MatrixType", "modulename": "luisa_lang.hir", "qualname": "MatrixType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.ArrayType", "modulename": "luisa_lang.hir", "qualname": "ArrayType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.ArrayType.__init__", "modulename": "luisa_lang.hir", "qualname": "ArrayType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">SymbolicConstant</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.ArrayType.element", "modulename": "luisa_lang.hir", "qualname": "ArrayType.element", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type"}, {"fullname": "luisa_lang.hir.ArrayType.count", "modulename": "luisa_lang.hir", "qualname": "ArrayType.count", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[int, luisa_lang.hir.SymbolicConstant]"}, {"fullname": "luisa_lang.hir.ArrayType.size", "modulename": "luisa_lang.hir", "qualname": "ArrayType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.ArrayType.align", "modulename": "luisa_lang.hir", "qualname": "ArrayType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.PointerType", "modulename": "luisa_lang.hir", "qualname": "PointerType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.PointerType.__init__", "modulename": "luisa_lang.hir", "qualname": "PointerType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span>)</span>"}, {"fullname": "luisa_lang.hir.PointerType.element", "modulename": "luisa_lang.hir", "qualname": "PointerType.element", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type"}, {"fullname": "luisa_lang.hir.PointerType.size", "modulename": "luisa_lang.hir", "qualname": "PointerType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.PointerType.align", "modulename": "luisa_lang.hir", "qualname": "PointerType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.TupleType", "modulename": "luisa_lang.hir", "qualname": "TupleType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.TupleType.__init__", "modulename": "luisa_lang.hir", "qualname": "TupleType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">elements</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.TupleType.elements", "modulename": "luisa_lang.hir", "qualname": "TupleType.elements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.hir.TupleType.size", "modulename": "luisa_lang.hir", "qualname": "TupleType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.TupleType.align", "modulename": "luisa_lang.hir", "qualname": "TupleType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.TupleType.member", "modulename": "luisa_lang.hir", "qualname": "TupleType.member", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.StructType", "modulename": "luisa_lang.hir", "qualname": "StructType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.StructType.__init__", "modulename": "luisa_lang.hir", "qualname": "StructType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">display_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.StructType.name", "modulename": "luisa_lang.hir", "qualname": "StructType.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.StructType.display_name", "modulename": "luisa_lang.hir", "qualname": "StructType.display_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.StructType.fields", "modulename": "luisa_lang.hir", "qualname": "StructType.fields", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[Tuple[str, luisa_lang.hir.Type]]"}, {"fullname": "luisa_lang.hir.StructType.size", "modulename": "luisa_lang.hir", "qualname": "StructType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.StructType.align", "modulename": "luisa_lang.hir", "qualname": "StructType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.StructType.member", "modulename": "luisa_lang.hir", "qualname": "StructType.member", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.TypeBound", "modulename": "luisa_lang.hir", "qualname": "TypeBound", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.TypeBound.satisfied_by", "modulename": "luisa_lang.hir", "qualname": "TypeBound.satisfied_by", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.AnyBound", "modulename": "luisa_lang.hir", "qualname": "AnyBound", "kind": "class", "doc": "<p></p>\n", "bases": "TypeBound"}, {"fullname": "luisa_lang.hir.AnyBound.satisfied_by", "modulename": "luisa_lang.hir", "qualname": "AnyBound.satisfied_by", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.SubtypeBound", "modulename": "luisa_lang.hir", "qualname": "SubtypeBound", "kind": "class", "doc": "<p></p>\n", "bases": "TypeBound"}, {"fullname": "luisa_lang.hir.SubtypeBound.__init__", "modulename": "luisa_lang.hir", "qualname": "SubtypeBound.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">super_type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>, </span><span class=\"param\"><span class=\"n\">exact_match</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "luisa_lang.hir.SubtypeBound.super_type", "modulename": "luisa_lang.hir", "qualname": "SubtypeBound.super_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type"}, {"fullname": "luisa_lang.hir.SubtypeBound.exact_match", "modulename": "luisa_lang.hir", "qualname": "SubtypeBound.exact_match", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.SubtypeBound.satisfied_by", "modulename": "luisa_lang.hir", "qualname": "SubtypeBound.satisfied_by", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.UnionBound", "modulename": "luisa_lang.hir", "qualname": "UnionBound", "kind": "class", "doc": "<p></p>\n", "bases": "TypeBound"}, {"fullname": "luisa_lang.hir.UnionBound.__init__", "modulename": "luisa_lang.hir", "qualname": "UnionBound.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bounds</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">SubtypeBound</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.UnionBound.bounds", "modulename": "luisa_lang.hir", "qualname": "UnionBound.bounds", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.SubtypeBound]"}, {"fullname": "luisa_lang.hir.UnionBound.satisfied_by", "modulename": "luisa_lang.hir", "qualname": "UnionBound.satisfied_by", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GenericParameter", "modulename": "luisa_lang.hir", "qualname": "GenericParameter", "kind": "class", "doc": "<p>A GenericParameter contains three parts:\n    name@ctx_name: bound</p>\n"}, {"fullname": "luisa_lang.hir.GenericParameter.__init__", "modulename": "luisa_lang.hir", "qualname": "GenericParameter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ctx_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">bound</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TypeBound</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.GenericParameter.name", "modulename": "luisa_lang.hir", "qualname": "GenericParameter.name", "kind": "variable", "doc": "<p>name of the generic parameter in source code, e.g. 'T'</p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.GenericParameter.ctx_name", "modulename": "luisa_lang.hir", "qualname": "GenericParameter.ctx_name", "kind": "variable", "doc": "<p>a string describing the context (where the generic parameter is defined), e.g. 'some_function'</p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.GenericParameter.bound", "modulename": "luisa_lang.hir", "qualname": "GenericParameter.bound", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.TypeBound | None"}, {"fullname": "luisa_lang.hir.OpaqueType", "modulename": "luisa_lang.hir", "qualname": "OpaqueType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.OpaqueType.__init__", "modulename": "luisa_lang.hir", "qualname": "OpaqueType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.OpaqueType.name", "modulename": "luisa_lang.hir", "qualname": "OpaqueType.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.OpaqueType.extra_args", "modulename": "luisa_lang.hir", "qualname": "OpaqueType.extra_args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[Any]"}, {"fullname": "luisa_lang.hir.OpaqueType.size", "modulename": "luisa_lang.hir", "qualname": "OpaqueType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.OpaqueType.align", "modulename": "luisa_lang.hir", "qualname": "OpaqueType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.OpaqueType.is_concrete", "modulename": "luisa_lang.hir", "qualname": "OpaqueType.is_concrete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.SymbolicType", "modulename": "luisa_lang.hir", "qualname": "SymbolicType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.SymbolicType.__init__", "modulename": "luisa_lang.hir", "qualname": "SymbolicType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">param</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">GenericParameter</span></span>)</span>"}, {"fullname": "luisa_lang.hir.SymbolicType.param", "modulename": "luisa_lang.hir", "qualname": "SymbolicType.param", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.GenericParameter"}, {"fullname": "luisa_lang.hir.SymbolicType.size", "modulename": "luisa_lang.hir", "qualname": "SymbolicType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.SymbolicType.align", "modulename": "luisa_lang.hir", "qualname": "SymbolicType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.MonomorphizationFunc", "modulename": "luisa_lang.hir", "qualname": "MonomorphizationFunc", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Callable[[typing.List[luisa_lang.hir.Type]], luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.hir.ParametricType", "modulename": "luisa_lang.hir", "qualname": "ParametricType", "kind": "class", "doc": "<p>The definition of a parametric type, e.g. class Foo[T]: ...</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.ParametricType.__init__", "modulename": "luisa_lang.hir", "qualname": "ParametricType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">GenericParameter</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">monomorphification_func</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]],</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.ParametricType.params", "modulename": "luisa_lang.hir", "qualname": "ParametricType.params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.GenericParameter]"}, {"fullname": "luisa_lang.hir.ParametricType.body", "modulename": "luisa_lang.hir", "qualname": "ParametricType.body", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type"}, {"fullname": "luisa_lang.hir.ParametricType.monomorphification_cache", "modulename": "luisa_lang.hir", "qualname": "ParametricType.monomorphification_cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[Tuple[Union[luisa_lang.hir.Type, Any], ...], luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.hir.ParametricType.monomorphification_func", "modulename": "luisa_lang.hir", "qualname": "ParametricType.monomorphification_func", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Callable[[List[luisa_lang.hir.Type]], luisa_lang.hir.Type]]"}, {"fullname": "luisa_lang.hir.ParametricType.instantiate", "modulename": "luisa_lang.hir", "qualname": "ParametricType.instantiate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.ParametricType.size", "modulename": "luisa_lang.hir", "qualname": "ParametricType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.ParametricType.align", "modulename": "luisa_lang.hir", "qualname": "ParametricType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.BoundType", "modulename": "luisa_lang.hir", "qualname": "BoundType", "kind": "class", "doc": "<p>An instance of a parametric type, e.g. Foo[int]</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.BoundType.__init__", "modulename": "luisa_lang.hir", "qualname": "BoundType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">generic</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ParametricType</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">instantiated</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.BoundType.generic", "modulename": "luisa_lang.hir", "qualname": "BoundType.generic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.ParametricType"}, {"fullname": "luisa_lang.hir.BoundType.args", "modulename": "luisa_lang.hir", "qualname": "BoundType.args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[Union[luisa_lang.hir.Type, Any]]"}, {"fullname": "luisa_lang.hir.BoundType.instantiated", "modulename": "luisa_lang.hir", "qualname": "BoundType.instantiated", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.hir.BoundType.size", "modulename": "luisa_lang.hir", "qualname": "BoundType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.BoundType.align", "modulename": "luisa_lang.hir", "qualname": "BoundType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.BoundType.member", "modulename": "luisa_lang.hir", "qualname": "BoundType.member", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.BoundType.method", "modulename": "luisa_lang.hir", "qualname": "BoundType.method", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionTemplate</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.TypeConstructorType", "modulename": "luisa_lang.hir", "qualname": "TypeConstructorType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.TypeConstructorType.__init__", "modulename": "luisa_lang.hir", "qualname": "TypeConstructorType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inner</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span>)</span>"}, {"fullname": "luisa_lang.hir.TypeConstructorType.inner", "modulename": "luisa_lang.hir", "qualname": "TypeConstructorType.inner", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type"}, {"fullname": "luisa_lang.hir.TypeConstructorType.size", "modulename": "luisa_lang.hir", "qualname": "TypeConstructorType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.TypeConstructorType.align", "modulename": "luisa_lang.hir", "qualname": "TypeConstructorType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionType", "modulename": "luisa_lang.hir", "qualname": "FunctionType", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "Type"}, {"fullname": "luisa_lang.hir.FunctionType.__init__", "modulename": "luisa_lang.hir", "qualname": "FunctionType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">func_like</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionTemplate</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">bound_object</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.FunctionType.func_like", "modulename": "luisa_lang.hir", "qualname": "FunctionType.func_like", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[luisa_lang.hir.Function, luisa_lang.hir.FunctionTemplate]"}, {"fullname": "luisa_lang.hir.FunctionType.bound_object", "modulename": "luisa_lang.hir", "qualname": "FunctionType.bound_object", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.Ref]"}, {"fullname": "luisa_lang.hir.FunctionType.size", "modulename": "luisa_lang.hir", "qualname": "FunctionType.size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionType.align", "modulename": "luisa_lang.hir", "qualname": "FunctionType.align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.Node", "modulename": "luisa_lang.hir", "qualname": "Node", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n"}, {"fullname": "luisa_lang.hir.Node.__init__", "modulename": "luisa_lang.hir", "qualname": "Node.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Node.span", "modulename": "luisa_lang.hir", "qualname": "Node.span", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.utils.Span]"}, {"fullname": "luisa_lang.hir.BasicBlock", "modulename": "luisa_lang.hir", "qualname": "BasicBlock", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Node"}, {"fullname": "luisa_lang.hir.BasicBlock.__init__", "modulename": "luisa_lang.hir", "qualname": "BasicBlock.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.BasicBlock.nodes", "modulename": "luisa_lang.hir", "qualname": "BasicBlock.nodes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Node]"}, {"fullname": "luisa_lang.hir.BasicBlock.terminated", "modulename": "luisa_lang.hir", "qualname": "BasicBlock.terminated", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.BasicBlock.span", "modulename": "luisa_lang.hir", "qualname": "BasicBlock.span", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.BasicBlock.append", "modulename": "luisa_lang.hir", "qualname": "BasicBlock.append", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">NodeT</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">NodeT</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.TypedNode", "modulename": "luisa_lang.hir", "qualname": "TypedNode", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Node"}, {"fullname": "luisa_lang.hir.TypedNode.__init__", "modulename": "luisa_lang.hir", "qualname": "TypedNode.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.TypedNode.type", "modulename": "luisa_lang.hir", "qualname": "TypedNode.type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.hir.TypedNode.span", "modulename": "luisa_lang.hir", "qualname": "TypedNode.span", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.Ref", "modulename": "luisa_lang.hir", "qualname": "Ref", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "TypedNode"}, {"fullname": "luisa_lang.hir.LocalRef", "modulename": "luisa_lang.hir", "qualname": "LocalRef", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Ref"}, {"fullname": "luisa_lang.hir.LocalRef.__init__", "modulename": "luisa_lang.hir", "qualname": "LocalRef.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span></span>)</span>"}, {"fullname": "luisa_lang.hir.LocalRef.value", "modulename": "luisa_lang.hir", "qualname": "LocalRef.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.LocalRef.span", "modulename": "luisa_lang.hir", "qualname": "LocalRef.span", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.Value", "modulename": "luisa_lang.hir", "qualname": "Value", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "TypedNode"}, {"fullname": "luisa_lang.hir.Unit", "modulename": "luisa_lang.hir", "qualname": "Unit", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.SymbolicConstant", "modulename": "luisa_lang.hir", "qualname": "SymbolicConstant", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.SymbolicConstant.__init__", "modulename": "luisa_lang.hir", "qualname": "SymbolicConstant.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">generic</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">GenericParameter</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.SymbolicConstant.generic", "modulename": "luisa_lang.hir", "qualname": "SymbolicConstant.generic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.GenericParameter"}, {"fullname": "luisa_lang.hir.ParameterSemantic", "modulename": "luisa_lang.hir", "qualname": "ParameterSemantic", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, {"fullname": "luisa_lang.hir.ParameterSemantic.BYVAL", "modulename": "luisa_lang.hir", "qualname": "ParameterSemantic.BYVAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ParameterSemantic.BYVAL: 1&gt;"}, {"fullname": "luisa_lang.hir.ParameterSemantic.BYREF", "modulename": "luisa_lang.hir", "qualname": "ParameterSemantic.BYREF", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ParameterSemantic.BYREF: 2&gt;"}, {"fullname": "luisa_lang.hir.Var", "modulename": "luisa_lang.hir", "qualname": "Var", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Ref"}, {"fullname": "luisa_lang.hir.Var.__init__", "modulename": "luisa_lang.hir", "qualname": "Var.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">semantic</span><span class=\"o\">=&lt;</span><span class=\"n\">ParameterSemantic</span><span class=\"o\">.</span><span class=\"n\">BYVAL</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Var.name", "modulename": "luisa_lang.hir", "qualname": "Var.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.Var.semantic", "modulename": "luisa_lang.hir", "qualname": "Var.semantic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.ParameterSemantic"}, {"fullname": "luisa_lang.hir.Var.type", "modulename": "luisa_lang.hir", "qualname": "Var.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.Member", "modulename": "luisa_lang.hir", "qualname": "Member", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.Member.__init__", "modulename": "luisa_lang.hir", "qualname": "Member.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Member.base", "modulename": "luisa_lang.hir", "qualname": "Member.base", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.Member.field", "modulename": "luisa_lang.hir", "qualname": "Member.field", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.Index", "modulename": "luisa_lang.hir", "qualname": "Index", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.Index.__init__", "modulename": "luisa_lang.hir", "qualname": "Index.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Index.base", "modulename": "luisa_lang.hir", "qualname": "Index.base", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.Index.index", "modulename": "luisa_lang.hir", "qualname": "Index.index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.MemberRef", "modulename": "luisa_lang.hir", "qualname": "MemberRef", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Ref"}, {"fullname": "luisa_lang.hir.MemberRef.__init__", "modulename": "luisa_lang.hir", "qualname": "MemberRef.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span>,</span><span class=\"param\">\t<span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.MemberRef.base", "modulename": "luisa_lang.hir", "qualname": "MemberRef.base", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Ref"}, {"fullname": "luisa_lang.hir.MemberRef.field", "modulename": "luisa_lang.hir", "qualname": "MemberRef.field", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.IndexRef", "modulename": "luisa_lang.hir", "qualname": "IndexRef", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Ref"}, {"fullname": "luisa_lang.hir.IndexRef.__init__", "modulename": "luisa_lang.hir", "qualname": "IndexRef.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.IndexRef.base", "modulename": "luisa_lang.hir", "qualname": "IndexRef.base", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Ref"}, {"fullname": "luisa_lang.hir.IndexRef.index", "modulename": "luisa_lang.hir", "qualname": "IndexRef.index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.Load", "modulename": "luisa_lang.hir", "qualname": "Load", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.Load.__init__", "modulename": "luisa_lang.hir", "qualname": "Load.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ref</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Load.ref", "modulename": "luisa_lang.hir", "qualname": "Load.ref", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Ref"}, {"fullname": "luisa_lang.hir.Constant", "modulename": "luisa_lang.hir", "qualname": "Constant", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.Constant.__init__", "modulename": "luisa_lang.hir", "qualname": "Constant.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Constant.value", "modulename": "luisa_lang.hir", "qualname": "Constant.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "luisa_lang.hir.TypeValue", "modulename": "luisa_lang.hir", "qualname": "TypeValue", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.TypeValue.__init__", "modulename": "luisa_lang.hir", "qualname": "TypeValue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.TypeValue.inner_type", "modulename": "luisa_lang.hir", "qualname": "TypeValue.inner_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionValue", "modulename": "luisa_lang.hir", "qualname": "FunctionValue", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.FunctionValue.__init__", "modulename": "luisa_lang.hir", "qualname": "FunctionValue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionType</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Alloca", "modulename": "luisa_lang.hir", "qualname": "Alloca", "kind": "class", "doc": "<p>A temporary variable</p>\n", "bases": "Ref"}, {"fullname": "luisa_lang.hir.Alloca.__init__", "modulename": "luisa_lang.hir", "qualname": "Alloca.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.AggregateInit", "modulename": "luisa_lang.hir", "qualname": "AggregateInit", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.AggregateInit.__init__", "modulename": "luisa_lang.hir", "qualname": "AggregateInit.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.AggregateInit.args", "modulename": "luisa_lang.hir", "qualname": "AggregateInit.args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Value]"}, {"fullname": "luisa_lang.hir.Intrinsic", "modulename": "luisa_lang.hir", "qualname": "Intrinsic", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.Intrinsic.__init__", "modulename": "luisa_lang.hir", "qualname": "Intrinsic.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Intrinsic.name", "modulename": "luisa_lang.hir", "qualname": "Intrinsic.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.Intrinsic.args", "modulename": "luisa_lang.hir", "qualname": "Intrinsic.args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Value | luisa_lang.hir.Ref]"}, {"fullname": "luisa_lang.hir.IntrinsicRef", "modulename": "luisa_lang.hir", "qualname": "IntrinsicRef", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Ref"}, {"fullname": "luisa_lang.hir.IntrinsicRef.__init__", "modulename": "luisa_lang.hir", "qualname": "IntrinsicRef.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.IntrinsicRef.name", "modulename": "luisa_lang.hir", "qualname": "IntrinsicRef.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.IntrinsicRef.args", "modulename": "luisa_lang.hir", "qualname": "IntrinsicRef.args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Value | luisa_lang.hir.Ref]"}, {"fullname": "luisa_lang.hir.Call", "modulename": "luisa_lang.hir", "qualname": "Call", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.Call.__init__", "modulename": "luisa_lang.hir", "qualname": "Call.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">op</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Call.op", "modulename": "luisa_lang.hir", "qualname": "Call.op", "kind": "variable", "doc": "<p>After type inference, op should be a Value.</p>\n", "annotation": ": luisa_lang.hir.Function"}, {"fullname": "luisa_lang.hir.Call.args", "modulename": "luisa_lang.hir", "qualname": "Call.args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Value | luisa_lang.hir.Ref]"}, {"fullname": "luisa_lang.hir.TemplateMatchingError", "modulename": "luisa_lang.hir", "qualname": "TemplateMatchingError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "luisa_lang.hir.TemplateMatchingError.__init__", "modulename": "luisa_lang.hir", "qualname": "TemplateMatchingError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "luisa_lang.hir.TemplateMatchingError.span", "modulename": "luisa_lang.hir", "qualname": "TemplateMatchingError.span", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.utils.Span | None"}, {"fullname": "luisa_lang.hir.TemplateMatchingError.message", "modulename": "luisa_lang.hir", "qualname": "TemplateMatchingError.message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.SpannedError", "modulename": "luisa_lang.hir", "qualname": "SpannedError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "luisa_lang.hir.SpannedError.__init__", "modulename": "luisa_lang.hir", "qualname": "SpannedError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Node</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span> <span class=\"o\">|</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">AST</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "luisa_lang.hir.SpannedError.span", "modulename": "luisa_lang.hir", "qualname": "SpannedError.span", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.utils.Span | None"}, {"fullname": "luisa_lang.hir.SpannedError.message", "modulename": "luisa_lang.hir", "qualname": "SpannedError.message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.ParsingError", "modulename": "luisa_lang.hir", "qualname": "ParsingError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "SpannedError"}, {"fullname": "luisa_lang.hir.InlineError", "modulename": "luisa_lang.hir", "qualname": "InlineError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "SpannedError"}, {"fullname": "luisa_lang.hir.TypeInferenceError", "modulename": "luisa_lang.hir", "qualname": "TypeInferenceError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "SpannedError"}, {"fullname": "luisa_lang.hir.Assign", "modulename": "luisa_lang.hir", "qualname": "Assign", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Node"}, {"fullname": "luisa_lang.hir.Assign.__init__", "modulename": "luisa_lang.hir", "qualname": "Assign.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ref</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Assign.ref", "modulename": "luisa_lang.hir", "qualname": "Assign.ref", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Ref"}, {"fullname": "luisa_lang.hir.Assign.value", "modulename": "luisa_lang.hir", "qualname": "Assign.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.Terminator", "modulename": "luisa_lang.hir", "qualname": "Terminator", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Node"}, {"fullname": "luisa_lang.hir.Loop", "modulename": "luisa_lang.hir", "qualname": "Loop", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Terminator"}, {"fullname": "luisa_lang.hir.Loop.__init__", "modulename": "luisa_lang.hir", "qualname": "Loop.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prepare</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">cond</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">update</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">merge</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Loop.prepare", "modulename": "luisa_lang.hir", "qualname": "Loop.prepare", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.BasicBlock"}, {"fullname": "luisa_lang.hir.Loop.cond", "modulename": "luisa_lang.hir", "qualname": "Loop.cond", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.Value]"}, {"fullname": "luisa_lang.hir.Loop.body", "modulename": "luisa_lang.hir", "qualname": "Loop.body", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.BasicBlock"}, {"fullname": "luisa_lang.hir.Loop.update", "modulename": "luisa_lang.hir", "qualname": "Loop.update", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.BasicBlock]"}, {"fullname": "luisa_lang.hir.Loop.merge", "modulename": "luisa_lang.hir", "qualname": "Loop.merge", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.BasicBlock"}, {"fullname": "luisa_lang.hir.Break", "modulename": "luisa_lang.hir", "qualname": "Break", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Terminator"}, {"fullname": "luisa_lang.hir.Break.__init__", "modulename": "luisa_lang.hir", "qualname": "Break.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Loop</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Break.target", "modulename": "luisa_lang.hir", "qualname": "Break.target", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Loop | None"}, {"fullname": "luisa_lang.hir.Continue", "modulename": "luisa_lang.hir", "qualname": "Continue", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Terminator"}, {"fullname": "luisa_lang.hir.Continue.__init__", "modulename": "luisa_lang.hir", "qualname": "Continue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Loop</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Continue.target", "modulename": "luisa_lang.hir", "qualname": "Continue.target", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Loop | None"}, {"fullname": "luisa_lang.hir.If", "modulename": "luisa_lang.hir", "qualname": "If", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Terminator"}, {"fullname": "luisa_lang.hir.If.__init__", "modulename": "luisa_lang.hir", "qualname": "If.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cond</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"n\">then_body</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">else_body</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">merge</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.If.cond", "modulename": "luisa_lang.hir", "qualname": "If.cond", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.If.then_body", "modulename": "luisa_lang.hir", "qualname": "If.then_body", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.BasicBlock"}, {"fullname": "luisa_lang.hir.If.else_body", "modulename": "luisa_lang.hir", "qualname": "If.else_body", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.BasicBlock]"}, {"fullname": "luisa_lang.hir.If.merge", "modulename": "luisa_lang.hir", "qualname": "If.merge", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.BasicBlock"}, {"fullname": "luisa_lang.hir.Return", "modulename": "luisa_lang.hir", "qualname": "Return", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Terminator"}, {"fullname": "luisa_lang.hir.Return.__init__", "modulename": "luisa_lang.hir", "qualname": "Return.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Return.value", "modulename": "luisa_lang.hir", "qualname": "Return.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.Value]"}, {"fullname": "luisa_lang.hir.ReturnRef", "modulename": "luisa_lang.hir", "qualname": "ReturnRef", "kind": "class", "doc": "<p>Base class for all nodes in the HIR. A node could be a value, a reference, or a statement.\nNodes equality is based on their identity.</p>\n", "bases": "Terminator"}, {"fullname": "luisa_lang.hir.ReturnRef.__init__", "modulename": "luisa_lang.hir", "qualname": "ReturnRef.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.ReturnRef.value", "modulename": "luisa_lang.hir", "qualname": "ReturnRef.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Ref"}, {"fullname": "luisa_lang.hir.Range", "modulename": "luisa_lang.hir", "qualname": "Range", "kind": "class", "doc": "<p>A node with a type, which can either be values or references.</p>\n", "bases": "Value"}, {"fullname": "luisa_lang.hir.Range.__init__", "modulename": "luisa_lang.hir", "qualname": "Range.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"n\">stop</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Range.start", "modulename": "luisa_lang.hir", "qualname": "Range.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.Range.step", "modulename": "luisa_lang.hir", "qualname": "Range.step", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.Range.stop", "modulename": "luisa_lang.hir", "qualname": "Range.stop", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value"}, {"fullname": "luisa_lang.hir.Range.value_type", "modulename": "luisa_lang.hir", "qualname": "Range.value_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.ComptimeValue", "modulename": "luisa_lang.hir", "qualname": "ComptimeValue", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.ComptimeValue.__init__", "modulename": "luisa_lang.hir", "qualname": "ComptimeValue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">update_func</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "luisa_lang.hir.ComptimeValue.value", "modulename": "luisa_lang.hir", "qualname": "ComptimeValue.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "luisa_lang.hir.ComptimeValue.update_func", "modulename": "luisa_lang.hir", "qualname": "ComptimeValue.update_func", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Callable[[Any], NoneType]]"}, {"fullname": "luisa_lang.hir.ComptimeValue.update", "modulename": "luisa_lang.hir", "qualname": "ComptimeValue.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionSignature", "modulename": "luisa_lang.hir", "qualname": "FunctionSignature", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.FunctionSignature.__init__", "modulename": "luisa_lang.hir", "qualname": "FunctionSignature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">generic_params</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">GenericParameter</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Var</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">return_type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.FunctionSignature.params", "modulename": "luisa_lang.hir", "qualname": "FunctionSignature.params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Var]"}, {"fullname": "luisa_lang.hir.FunctionSignature.return_type", "modulename": "luisa_lang.hir", "qualname": "FunctionSignature.return_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type | None"}, {"fullname": "luisa_lang.hir.FunctionSignature.generic_params", "modulename": "luisa_lang.hir", "qualname": "FunctionSignature.generic_params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.GenericParameter]"}, {"fullname": "luisa_lang.hir.Function", "modulename": "luisa_lang.hir", "qualname": "Function", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.Function.__init__", "modulename": "luisa_lang.hir", "qualname": "Function.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Var</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">return_type</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_method</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">returning_ref</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "luisa_lang.hir.Function.name", "modulename": "luisa_lang.hir", "qualname": "Function.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.hir.Function.params", "modulename": "luisa_lang.hir", "qualname": "Function.params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Var]"}, {"fullname": "luisa_lang.hir.Function.return_type", "modulename": "luisa_lang.hir", "qualname": "Function.return_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Type | None"}, {"fullname": "luisa_lang.hir.Function.body", "modulename": "luisa_lang.hir", "qualname": "Function.body", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.BasicBlock]"}, {"fullname": "luisa_lang.hir.Function.export", "modulename": "luisa_lang.hir", "qualname": "Function.export", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.Function.locals", "modulename": "luisa_lang.hir", "qualname": "Function.locals", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.Var]"}, {"fullname": "luisa_lang.hir.Function.complete", "modulename": "luisa_lang.hir", "qualname": "Function.complete", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.Function.is_method", "modulename": "luisa_lang.hir", "qualname": "Function.is_method", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.Function.returning_ref", "modulename": "luisa_lang.hir", "qualname": "Function.returning_ref", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.hir.Function.inline_hint", "modulename": "luisa_lang.hir", "qualname": "Function.inline_hint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;never&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;always&#39;</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.match_template_args", "modulename": "luisa_lang.hir", "qualname": "match_template_args", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">GenericParameter</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">],</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TypeInferenceError</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.match_func_template_args", "modulename": "luisa_lang.hir", "qualname": "match_func_template_args", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sig</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionSignature</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">GenericParameter</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">],</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TypeInferenceError</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.GlobalContext", "modulename": "luisa_lang.hir", "qualname": "GlobalContext", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.GlobalContext.types", "modulename": "luisa_lang.hir", "qualname": "GlobalContext.types", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[type, luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.hir.GlobalContext.functions", "modulename": "luisa_lang.hir", "qualname": "GlobalContext.functions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[Callable[..., Any], luisa_lang.hir.FunctionTemplate]"}, {"fullname": "luisa_lang.hir.GlobalContext.get", "modulename": "luisa_lang.hir", "qualname": "GlobalContext.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">GlobalContext</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FuncMetadata", "modulename": "luisa_lang.hir", "qualname": "FuncMetadata", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.StructMetadata", "modulename": "luisa_lang.hir", "qualname": "StructMetadata", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.get_dsl_func", "modulename": "luisa_lang.hir", "qualname": "get_dsl_func", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionTemplate</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.get_dsl_type", "modulename": "luisa_lang.hir", "qualname": "get_dsl_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"nb\">type</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.is_type_compatible_to", "modulename": "luisa_lang.hir", "qualname": "is_type_compatible_to", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionInliner", "modulename": "luisa_lang.hir", "qualname": "FunctionInliner", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.hir.FunctionInliner.__init__", "modulename": "luisa_lang.hir", "qualname": "FunctionInliner.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "luisa_lang.hir.FunctionInliner.mapping", "modulename": "luisa_lang.hir", "qualname": "FunctionInliner.mapping", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[luisa_lang.hir.Ref | luisa_lang.hir.Value, luisa_lang.hir.Ref | luisa_lang.hir.Value]"}, {"fullname": "luisa_lang.hir.FunctionInliner.ret", "modulename": "luisa_lang.hir", "qualname": "FunctionInliner.ret", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Value | luisa_lang.hir.Ref | None"}, {"fullname": "luisa_lang.hir.FunctionInliner.do_inline", "modulename": "luisa_lang.hir", "qualname": "FunctionInliner.do_inline", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">func_body</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.FunctionInliner.inline", "modulename": "luisa_lang.hir", "qualname": "FunctionInliner.inline", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.hir.register_dsl_type_alias", "modulename": "luisa_lang.hir", "qualname": "register_dsl_type_alias", "kind": "function", "doc": "<p>Allow a type to be remapped to another type within DSL code.\nParameters:\ntarget (type): The type to be remapped.\nalias (type): The type to which the target type will be remapped.\nExample:</p>\n\n<p>For example, </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nd\">@lc</span><span class=\"o\">.</span><span class=\"n\">struct</span>\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SomeOtherFoo</span><span class=\"p\">:</span>\n    <span class=\"n\">components</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>\n\n<span class=\"n\">register_dsl_type_alias</span><span class=\"p\">(</span><span class=\"n\">SomeOtherFoo</span><span class=\"p\">,</span> <span class=\"n\">Foo</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@lc</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">SomeOtherFoo</span><span class=\"p\">):</span> <span class=\"c1\"># SomeOtherFoo is interpreted as Foo</span>\n    <span class=\"o\">...</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">type</span>, </span><span class=\"param\"><span class=\"n\">alias</span><span class=\"p\">:</span> <span class=\"nb\">type</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang", "modulename": "luisa_lang.lang", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.lang_builtins", "modulename": "luisa_lang.lang_builtins", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.lang_builtins.Buffer", "modulename": "luisa_lang.lang_builtins", "qualname": "Buffer", "kind": "class", "doc": "<p>A buffer is a contiguuos memory of elements of type T.</p>\n", "bases": "typing.Generic[~T]"}, {"fullname": "luisa_lang.lang_builtins.Array", "modulename": "luisa_lang.lang_builtins", "qualname": "Array", "kind": "class", "doc": "<p>An array is a fixed-size collection of elements of type T. N need to be a Literal type.\nExample:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]]()</span>\n</code></pre>\n</div>\n", "bases": "typing.Generic[~T, ~N]"}, {"fullname": "luisa_lang.lang_builtins.range", "modulename": "luisa_lang.lang_builtins", "qualname": "range", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.comptime", "modulename": "luisa_lang.lang_builtins", "qualname": "comptime", "kind": "function", "doc": "<p>Allowing mixing normal python object as compile-time value with DSL code.\nUsage:\n    - <code>lc.comptime(e)</code> marks the expression <code>e</code> as a compile-time value.\n    - <code>with lc.comptime() as block: ...</code> marks the block as a compile-time block.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.address_of", "modulename": "luisa_lang.lang_builtins", "qualname": "address_of", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.unroll", "modulename": "luisa_lang.lang_builtins", "qualname": "unroll", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">range_</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.static_assert", "modulename": "luisa_lang.lang_builtins", "qualname": "static_assert", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cond</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.type_of_opt", "modulename": "luisa_lang.lang_builtins", "qualname": "type_of_opt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.typeof", "modulename": "luisa_lang.lang_builtins", "qualname": "typeof", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.dispatch_id", "modulename": "luisa_lang.lang_builtins", "qualname": "dispatch_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">uint3</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.thread_id", "modulename": "luisa_lang.lang_builtins", "qualname": "thread_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">uint3</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.block_id", "modulename": "luisa_lang.lang_builtins", "qualname": "block_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">uint3</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.intrinsic", "modulename": "luisa_lang.lang_builtins", "qualname": "intrinsic", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ret_type</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.cast", "modulename": "luisa_lang.lang_builtins", "qualname": "cast", "kind": "function", "doc": "<p>Attempt to convert the value to the target type.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.bitcast", "modulename": "luisa_lang.lang_builtins", "qualname": "bitcast", "kind": "function", "doc": "<p>Attempt to convert the value to the target type, preserving the bit representation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.device_assert", "modulename": "luisa_lang.lang_builtins", "qualname": "device_assert", "kind": "function", "doc": "<p>Assert that the condition is true at runtime.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cond</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">NoReturn</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.trap", "modulename": "luisa_lang.lang_builtins", "qualname": "trap", "kind": "function", "doc": "<p>Aborts the kernel execution</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.lang_builtins.sizeof", "modulename": "luisa_lang.lang_builtins", "qualname": "sizeof", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types", "modulename": "luisa_lang.math_types", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.FLOAT_TYPES", "modulename": "luisa_lang.math_types", "qualname": "FLOAT_TYPES", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Final[List[str]]", "default_value": "[&#x27;f32&#x27;, &#x27;f64&#x27;, &#x27;float2&#x27;, &#x27;double2&#x27;, &#x27;float3&#x27;, &#x27;double3&#x27;, &#x27;float4&#x27;, &#x27;double4&#x27;]"}, {"fullname": "luisa_lang.math_types.FloatType", "modulename": "luisa_lang.math_types", "qualname": "FloatType", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Union[ForwardRef(&#x27;f32&#x27;), ForwardRef(&#x27;f64&#x27;), ForwardRef(&#x27;float2&#x27;), ForwardRef(&#x27;double2&#x27;), ForwardRef(&#x27;float3&#x27;), ForwardRef(&#x27;double3&#x27;), ForwardRef(&#x27;float4&#x27;), ForwardRef(&#x27;double4&#x27;)]"}, {"fullname": "luisa_lang.math_types.abs", "modulename": "luisa_lang.math_types", "qualname": "abs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.acos", "modulename": "luisa_lang.math_types", "qualname": "acos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.acosh", "modulename": "luisa_lang.math_types", "qualname": "acosh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.asin", "modulename": "luisa_lang.math_types", "qualname": "asin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.asinh", "modulename": "luisa_lang.math_types", "qualname": "asinh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.atan", "modulename": "luisa_lang.math_types", "qualname": "atan", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.atanh", "modulename": "luisa_lang.math_types", "qualname": "atanh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.ceil", "modulename": "luisa_lang.math_types", "qualname": "ceil", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.cos", "modulename": "luisa_lang.math_types", "qualname": "cos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.cosh", "modulename": "luisa_lang.math_types", "qualname": "cosh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.exp", "modulename": "luisa_lang.math_types", "qualname": "exp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.floor", "modulename": "luisa_lang.math_types", "qualname": "floor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.log", "modulename": "luisa_lang.math_types", "qualname": "log", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.log10", "modulename": "luisa_lang.math_types", "qualname": "log10", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.log2", "modulename": "luisa_lang.math_types", "qualname": "log2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.sin", "modulename": "luisa_lang.math_types", "qualname": "sin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.sinh", "modulename": "luisa_lang.math_types", "qualname": "sinh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.sqrt", "modulename": "luisa_lang.math_types", "qualname": "sqrt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.tan", "modulename": "luisa_lang.math_types", "qualname": "tan", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.tanh", "modulename": "luisa_lang.math_types", "qualname": "tanh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.trunc", "modulename": "luisa_lang.math_types", "qualname": "trunc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.atan2", "modulename": "luisa_lang.math_types", "qualname": "atan2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.copysign", "modulename": "luisa_lang.math_types", "qualname": "copysign", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_F1</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_F1</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.math_types.f64", "modulename": "luisa_lang.math_types", "qualname": "f64", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.f64.__init__", "modulename": "luisa_lang.math_types", "qualname": "f64.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.i8", "modulename": "luisa_lang.math_types", "qualname": "i8", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.i8.__init__", "modulename": "luisa_lang.math_types", "qualname": "i8.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.u8", "modulename": "luisa_lang.math_types", "qualname": "u8", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.u8.__init__", "modulename": "luisa_lang.math_types", "qualname": "u8.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.i16", "modulename": "luisa_lang.math_types", "qualname": "i16", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.i16.__init__", "modulename": "luisa_lang.math_types", "qualname": "i16.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.u16", "modulename": "luisa_lang.math_types", "qualname": "u16", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.u16.__init__", "modulename": "luisa_lang.math_types", "qualname": "u16.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.i64", "modulename": "luisa_lang.math_types", "qualname": "i64", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.i64.__init__", "modulename": "luisa_lang.math_types", "qualname": "i64.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.u64", "modulename": "luisa_lang.math_types", "qualname": "u64", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.u64.__init__", "modulename": "luisa_lang.math_types", "qualname": "u64.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.u32", "modulename": "luisa_lang.math_types", "qualname": "u32", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.u32.__init__", "modulename": "luisa_lang.math_types", "qualname": "u32.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.bool2", "modulename": "luisa_lang.math_types", "qualname": "bool2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.bool2.__init__", "modulename": "luisa_lang.math_types", "qualname": "bool2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.bool2.x", "modulename": "luisa_lang.math_types", "qualname": "bool2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.bool2.y", "modulename": "luisa_lang.math_types", "qualname": "bool2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.float2", "modulename": "luisa_lang.math_types", "qualname": "float2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.float2.__init__", "modulename": "luisa_lang.math_types", "qualname": "float2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.float2.x", "modulename": "luisa_lang.math_types", "qualname": "float2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.float2.y", "modulename": "luisa_lang.math_types", "qualname": "float2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.double2", "modulename": "luisa_lang.math_types", "qualname": "double2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.double2.__init__", "modulename": "luisa_lang.math_types", "qualname": "double2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.double2.x", "modulename": "luisa_lang.math_types", "qualname": "double2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.double2.y", "modulename": "luisa_lang.math_types", "qualname": "double2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.byte2", "modulename": "luisa_lang.math_types", "qualname": "byte2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.byte2.__init__", "modulename": "luisa_lang.math_types", "qualname": "byte2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.byte2.x", "modulename": "luisa_lang.math_types", "qualname": "byte2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.byte2.y", "modulename": "luisa_lang.math_types", "qualname": "byte2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.ubyte2", "modulename": "luisa_lang.math_types", "qualname": "ubyte2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ubyte2.__init__", "modulename": "luisa_lang.math_types", "qualname": "ubyte2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ubyte2.x", "modulename": "luisa_lang.math_types", "qualname": "ubyte2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.ubyte2.y", "modulename": "luisa_lang.math_types", "qualname": "ubyte2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.short2", "modulename": "luisa_lang.math_types", "qualname": "short2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.short2.__init__", "modulename": "luisa_lang.math_types", "qualname": "short2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.short2.x", "modulename": "luisa_lang.math_types", "qualname": "short2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.short2.y", "modulename": "luisa_lang.math_types", "qualname": "short2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.ushort2", "modulename": "luisa_lang.math_types", "qualname": "ushort2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ushort2.__init__", "modulename": "luisa_lang.math_types", "qualname": "ushort2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ushort2.x", "modulename": "luisa_lang.math_types", "qualname": "ushort2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.ushort2.y", "modulename": "luisa_lang.math_types", "qualname": "ushort2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.int2", "modulename": "luisa_lang.math_types", "qualname": "int2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.int2.__init__", "modulename": "luisa_lang.math_types", "qualname": "int2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.int2.x", "modulename": "luisa_lang.math_types", "qualname": "int2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.int2.y", "modulename": "luisa_lang.math_types", "qualname": "int2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.uint2", "modulename": "luisa_lang.math_types", "qualname": "uint2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.uint2.__init__", "modulename": "luisa_lang.math_types", "qualname": "uint2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.uint2.x", "modulename": "luisa_lang.math_types", "qualname": "uint2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.uint2.y", "modulename": "luisa_lang.math_types", "qualname": "uint2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.long2", "modulename": "luisa_lang.math_types", "qualname": "long2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.long2.__init__", "modulename": "luisa_lang.math_types", "qualname": "long2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.long2.x", "modulename": "luisa_lang.math_types", "qualname": "long2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.long2.y", "modulename": "luisa_lang.math_types", "qualname": "long2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.ulong2", "modulename": "luisa_lang.math_types", "qualname": "ulong2", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ulong2.__init__", "modulename": "luisa_lang.math_types", "qualname": "ulong2.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ulong2.x", "modulename": "luisa_lang.math_types", "qualname": "ulong2.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.ulong2.y", "modulename": "luisa_lang.math_types", "qualname": "ulong2.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.bool3", "modulename": "luisa_lang.math_types", "qualname": "bool3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.bool3.__init__", "modulename": "luisa_lang.math_types", "qualname": "bool3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.bool3.x", "modulename": "luisa_lang.math_types", "qualname": "bool3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.bool3.y", "modulename": "luisa_lang.math_types", "qualname": "bool3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.bool3.z", "modulename": "luisa_lang.math_types", "qualname": "bool3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.float3", "modulename": "luisa_lang.math_types", "qualname": "float3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.float3.__init__", "modulename": "luisa_lang.math_types", "qualname": "float3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.float3.x", "modulename": "luisa_lang.math_types", "qualname": "float3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.float3.y", "modulename": "luisa_lang.math_types", "qualname": "float3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.float3.z", "modulename": "luisa_lang.math_types", "qualname": "float3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.double3", "modulename": "luisa_lang.math_types", "qualname": "double3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.double3.__init__", "modulename": "luisa_lang.math_types", "qualname": "double3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.double3.x", "modulename": "luisa_lang.math_types", "qualname": "double3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.double3.y", "modulename": "luisa_lang.math_types", "qualname": "double3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.double3.z", "modulename": "luisa_lang.math_types", "qualname": "double3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.byte3", "modulename": "luisa_lang.math_types", "qualname": "byte3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.byte3.__init__", "modulename": "luisa_lang.math_types", "qualname": "byte3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.byte3.x", "modulename": "luisa_lang.math_types", "qualname": "byte3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.byte3.y", "modulename": "luisa_lang.math_types", "qualname": "byte3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.byte3.z", "modulename": "luisa_lang.math_types", "qualname": "byte3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.ubyte3", "modulename": "luisa_lang.math_types", "qualname": "ubyte3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ubyte3.__init__", "modulename": "luisa_lang.math_types", "qualname": "ubyte3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ubyte3.x", "modulename": "luisa_lang.math_types", "qualname": "ubyte3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.ubyte3.y", "modulename": "luisa_lang.math_types", "qualname": "ubyte3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.ubyte3.z", "modulename": "luisa_lang.math_types", "qualname": "ubyte3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.short3", "modulename": "luisa_lang.math_types", "qualname": "short3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.short3.__init__", "modulename": "luisa_lang.math_types", "qualname": "short3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.short3.x", "modulename": "luisa_lang.math_types", "qualname": "short3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.short3.y", "modulename": "luisa_lang.math_types", "qualname": "short3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.short3.z", "modulename": "luisa_lang.math_types", "qualname": "short3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.ushort3", "modulename": "luisa_lang.math_types", "qualname": "ushort3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ushort3.__init__", "modulename": "luisa_lang.math_types", "qualname": "ushort3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ushort3.x", "modulename": "luisa_lang.math_types", "qualname": "ushort3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.ushort3.y", "modulename": "luisa_lang.math_types", "qualname": "ushort3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.ushort3.z", "modulename": "luisa_lang.math_types", "qualname": "ushort3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.int3", "modulename": "luisa_lang.math_types", "qualname": "int3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.int3.__init__", "modulename": "luisa_lang.math_types", "qualname": "int3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.int3.x", "modulename": "luisa_lang.math_types", "qualname": "int3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.int3.y", "modulename": "luisa_lang.math_types", "qualname": "int3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.int3.z", "modulename": "luisa_lang.math_types", "qualname": "int3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.uint3", "modulename": "luisa_lang.math_types", "qualname": "uint3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.uint3.__init__", "modulename": "luisa_lang.math_types", "qualname": "uint3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.uint3.x", "modulename": "luisa_lang.math_types", "qualname": "uint3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.uint3.y", "modulename": "luisa_lang.math_types", "qualname": "uint3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.uint3.z", "modulename": "luisa_lang.math_types", "qualname": "uint3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.long3", "modulename": "luisa_lang.math_types", "qualname": "long3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.long3.__init__", "modulename": "luisa_lang.math_types", "qualname": "long3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.long3.x", "modulename": "luisa_lang.math_types", "qualname": "long3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.long3.y", "modulename": "luisa_lang.math_types", "qualname": "long3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.long3.z", "modulename": "luisa_lang.math_types", "qualname": "long3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.ulong3", "modulename": "luisa_lang.math_types", "qualname": "ulong3", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ulong3.__init__", "modulename": "luisa_lang.math_types", "qualname": "ulong3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ulong3.x", "modulename": "luisa_lang.math_types", "qualname": "ulong3.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.ulong3.y", "modulename": "luisa_lang.math_types", "qualname": "ulong3.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.ulong3.z", "modulename": "luisa_lang.math_types", "qualname": "ulong3.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.bool4", "modulename": "luisa_lang.math_types", "qualname": "bool4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.bool4.__init__", "modulename": "luisa_lang.math_types", "qualname": "bool4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.bool4.x", "modulename": "luisa_lang.math_types", "qualname": "bool4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.bool4.y", "modulename": "luisa_lang.math_types", "qualname": "bool4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.bool4.z", "modulename": "luisa_lang.math_types", "qualname": "bool4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.bool4.w", "modulename": "luisa_lang.math_types", "qualname": "bool4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.math_types.float4", "modulename": "luisa_lang.math_types", "qualname": "float4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.float4.__init__", "modulename": "luisa_lang.math_types", "qualname": "float4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.float4.x", "modulename": "luisa_lang.math_types", "qualname": "float4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.float4.y", "modulename": "luisa_lang.math_types", "qualname": "float4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.float4.z", "modulename": "luisa_lang.math_types", "qualname": "float4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.float4.w", "modulename": "luisa_lang.math_types", "qualname": "float4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "luisa_lang.math_types.double4", "modulename": "luisa_lang.math_types", "qualname": "double4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.double4.__init__", "modulename": "luisa_lang.math_types", "qualname": "double4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">FloatLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.double4.x", "modulename": "luisa_lang.math_types", "qualname": "double4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.double4.y", "modulename": "luisa_lang.math_types", "qualname": "double4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.double4.z", "modulename": "luisa_lang.math_types", "qualname": "double4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.double4.w", "modulename": "luisa_lang.math_types", "qualname": "double4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.f64"}, {"fullname": "luisa_lang.math_types.byte4", "modulename": "luisa_lang.math_types", "qualname": "byte4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.byte4.__init__", "modulename": "luisa_lang.math_types", "qualname": "byte4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.byte4.x", "modulename": "luisa_lang.math_types", "qualname": "byte4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.byte4.y", "modulename": "luisa_lang.math_types", "qualname": "byte4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.byte4.z", "modulename": "luisa_lang.math_types", "qualname": "byte4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.byte4.w", "modulename": "luisa_lang.math_types", "qualname": "byte4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i8"}, {"fullname": "luisa_lang.math_types.ubyte4", "modulename": "luisa_lang.math_types", "qualname": "ubyte4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ubyte4.__init__", "modulename": "luisa_lang.math_types", "qualname": "ubyte4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ubyte4.x", "modulename": "luisa_lang.math_types", "qualname": "ubyte4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.ubyte4.y", "modulename": "luisa_lang.math_types", "qualname": "ubyte4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.ubyte4.z", "modulename": "luisa_lang.math_types", "qualname": "ubyte4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.ubyte4.w", "modulename": "luisa_lang.math_types", "qualname": "ubyte4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u8"}, {"fullname": "luisa_lang.math_types.short4", "modulename": "luisa_lang.math_types", "qualname": "short4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.short4.__init__", "modulename": "luisa_lang.math_types", "qualname": "short4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.short4.x", "modulename": "luisa_lang.math_types", "qualname": "short4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.short4.y", "modulename": "luisa_lang.math_types", "qualname": "short4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.short4.z", "modulename": "luisa_lang.math_types", "qualname": "short4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.short4.w", "modulename": "luisa_lang.math_types", "qualname": "short4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i16"}, {"fullname": "luisa_lang.math_types.ushort4", "modulename": "luisa_lang.math_types", "qualname": "ushort4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ushort4.__init__", "modulename": "luisa_lang.math_types", "qualname": "ushort4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u16</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ushort4.x", "modulename": "luisa_lang.math_types", "qualname": "ushort4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.ushort4.y", "modulename": "luisa_lang.math_types", "qualname": "ushort4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.ushort4.z", "modulename": "luisa_lang.math_types", "qualname": "ushort4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.ushort4.w", "modulename": "luisa_lang.math_types", "qualname": "ushort4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u16"}, {"fullname": "luisa_lang.math_types.int4", "modulename": "luisa_lang.math_types", "qualname": "int4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.int4.__init__", "modulename": "luisa_lang.math_types", "qualname": "int4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.int4.x", "modulename": "luisa_lang.math_types", "qualname": "int4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.int4.y", "modulename": "luisa_lang.math_types", "qualname": "int4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.int4.z", "modulename": "luisa_lang.math_types", "qualname": "int4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.int4.w", "modulename": "luisa_lang.math_types", "qualname": "int4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "luisa_lang.math_types.uint4", "modulename": "luisa_lang.math_types", "qualname": "uint4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.uint4.__init__", "modulename": "luisa_lang.math_types", "qualname": "uint4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u32</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.uint4.x", "modulename": "luisa_lang.math_types", "qualname": "uint4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.uint4.y", "modulename": "luisa_lang.math_types", "qualname": "uint4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.uint4.z", "modulename": "luisa_lang.math_types", "qualname": "uint4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.uint4.w", "modulename": "luisa_lang.math_types", "qualname": "uint4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u32"}, {"fullname": "luisa_lang.math_types.long4", "modulename": "luisa_lang.math_types", "qualname": "long4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.long4.__init__", "modulename": "luisa_lang.math_types", "qualname": "long4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">i64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.long4.x", "modulename": "luisa_lang.math_types", "qualname": "long4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.long4.y", "modulename": "luisa_lang.math_types", "qualname": "long4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.long4.z", "modulename": "luisa_lang.math_types", "qualname": "long4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.long4.w", "modulename": "luisa_lang.math_types", "qualname": "long4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.i64"}, {"fullname": "luisa_lang.math_types.ulong4", "modulename": "luisa_lang.math_types", "qualname": "ulong4", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.math_types.ulong4.__init__", "modulename": "luisa_lang.math_types", "qualname": "ulong4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">u64</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">math_types</span><span class=\"o\">.</span><span class=\"n\">IntLiteral</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "luisa_lang.math_types.ulong4.x", "modulename": "luisa_lang.math_types", "qualname": "ulong4.x", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.ulong4.y", "modulename": "luisa_lang.math_types", "qualname": "ulong4.y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.ulong4.z", "modulename": "luisa_lang.math_types", "qualname": "ulong4.z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.ulong4.w", "modulename": "luisa_lang.math_types", "qualname": "ulong4.w", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.math_types.u64"}, {"fullname": "luisa_lang.math_types.f32", "modulename": "luisa_lang.math_types", "qualname": "f32", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;float&#x27;&gt;"}, {"fullname": "luisa_lang.math_types.i32", "modulename": "luisa_lang.math_types", "qualname": "i32", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;int&#x27;&gt;"}, {"fullname": "luisa_lang.parse", "modulename": "luisa_lang.parse", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.parse.convert_func_signature", "modulename": "luisa_lang.parse", "qualname": "convert_func_signature", "kind": "function", "doc": "<p>implicit_type_params: Tuple[List[Tuple[str,\n    classinfo.VarType]], classinfo.VarType]</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">signature</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">MethodType</span>,</span><span class=\"param\">\t<span class=\"n\">ctx_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FuncProperties</span>,</span><span class=\"param\">\t<span class=\"n\">globalns</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">type_var_ns</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">implicit_type_params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">self_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;parse&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;instantiate&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;parse&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionSignature</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">TypeParser</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser", "modulename": "luisa_lang.parse", "qualname": "FuncParser", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.parse.FuncParser.__init__", "modulename": "luisa_lang.parse", "qualname": "FuncParser.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"nb\">object</span>,</span><span class=\"param\">\t<span class=\"n\">signature</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionSignature</span>,</span><span class=\"param\">\t<span class=\"n\">globalns</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">type_var_ns</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">self_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">return_ref</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "luisa_lang.parse.FuncParser.name", "modulename": "luisa_lang.parse", "qualname": "FuncParser.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "luisa_lang.parse.FuncParser.func", "modulename": "luisa_lang.parse", "qualname": "FuncParser.func", "kind": "variable", "doc": "<p></p>\n", "annotation": ": object"}, {"fullname": "luisa_lang.parse.FuncParser.globalns", "modulename": "luisa_lang.parse", "qualname": "FuncParser.globalns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, Any]"}, {"fullname": "luisa_lang.parse.FuncParser.self_type", "modulename": "luisa_lang.parse", "qualname": "FuncParser.self_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.parse.FuncParser.vars", "modulename": "luisa_lang.parse", "qualname": "FuncParser.vars", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, luisa_lang.hir.Var | luisa_lang.hir.ComptimeValue]"}, {"fullname": "luisa_lang.parse.FuncParser.func_def", "modulename": "luisa_lang.parse", "qualname": "FuncParser.func_def", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ast.FunctionDef"}, {"fullname": "luisa_lang.parse.FuncParser.parsed_func", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parsed_func", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.hir.Function"}, {"fullname": "luisa_lang.parse.FuncParser.type_var_ns", "modulename": "luisa_lang.parse", "qualname": "FuncParser.type_var_ns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[TypeVar, luisa_lang.hir.Type]"}, {"fullname": "luisa_lang.parse.FuncParser.bb_stack", "modulename": "luisa_lang.parse", "qualname": "FuncParser.bb_stack", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[luisa_lang.hir.BasicBlock]"}, {"fullname": "luisa_lang.parse.FuncParser.type_parser", "modulename": "luisa_lang.parse", "qualname": "FuncParser.type_parser", "kind": "variable", "doc": "<p></p>\n", "annotation": ": luisa_lang.parse.TypeParser"}, {"fullname": "luisa_lang.parse.FuncParser.break_and_continues", "modulename": "luisa_lang.parse", "qualname": "FuncParser.break_and_continues", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[luisa_lang.hir.Break | luisa_lang.hir.Continue]]"}, {"fullname": "luisa_lang.parse.FuncParser.returning_ref", "modulename": "luisa_lang.parse", "qualname": "FuncParser.returning_ref", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "luisa_lang.parse.FuncParser.signature", "modulename": "luisa_lang.parse", "qualname": "FuncParser.signature", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.parse.FuncParser.cur_bb", "modulename": "luisa_lang.parse", "qualname": "FuncParser.cur_bb", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">BasicBlock</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_type", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ty</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">GenericInstance</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">UnionType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">SelfType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">AnyType</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">classinfo</span><span class=\"o\">.</span><span class=\"n\">LiteralType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.convert_constexpr", "modulename": "luisa_lang.parse", "qualname": "FuncParser.convert_constexpr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">comptime_val</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_const", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_const", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">const</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Constant</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.convert_any_to_value", "modulename": "luisa_lang.parse", "qualname": "FuncParser.convert_any_to_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_name", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Name</span>,</span><span class=\"param\">\t<span class=\"n\">new_var_hint</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dsl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;comptime&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.try_convert_comptime_value", "modulename": "luisa_lang.parse", "qualname": "FuncParser.try_convert_comptime_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.get_index_type", "modulename": "luisa_lang.parse", "qualname": "FuncParser.get_index_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_access_ref", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_access_ref", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Subscript</span> <span class=\"o\">|</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Attribute</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TypeValue</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionValue</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_call_impl", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_call_impl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionTemplate</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inline</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TemplateMatchingError</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_call_impl_ref", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_call_impl_ref", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionTemplate</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TemplateMatchingError</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_call_impl_ex", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_call_impl_ex", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Function</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionTemplate</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inline</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">expect_ref</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TemplateMatchingError</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.handle_intrinsic", "modulename": "luisa_lang.parse", "qualname": "FuncParser.handle_intrinsic", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Call</span>,</span><span class=\"param\">\t<span class=\"n\">is_ref</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.handle_special_functions", "modulename": "luisa_lang.parse", "qualname": "FuncParser.handle_special_functions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Call</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_call_ref", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_call_ref", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Call</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_call", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_call", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Call</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_binop", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_binop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">BinOp</span> <span class=\"o\">|</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Compare</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_ref", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_ref", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">expr</span>,</span><span class=\"param\">\t<span class=\"n\">new_var_hint</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dsl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;comptime&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">TypeValue</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">FunctionValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_multi_assignment", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_multi_assignment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">expr</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">anno_ty_fn</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Type</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_unary", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_unary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">UnaryOp</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_expr", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_expr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">expr</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.eval_expr", "modulename": "luisa_lang.parse", "qualname": "FuncParser.eval_expr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">Expression</span> <span class=\"o\">|</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">expr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.convert_to_value", "modulename": "luisa_lang.parse", "qualname": "FuncParser.convert_to_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Ref</span> <span class=\"o\">|</span> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">ComptimeValue</span>,</span><span class=\"param\">\t<span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">hir</span><span class=\"o\">.</span><span class=\"n\">Value</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_stmt", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_stmt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stmt</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">stmt</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.parse.FuncParser.parse_body", "modulename": "luisa_lang.parse", "qualname": "FuncParser.parse_body", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils", "modulename": "luisa_lang.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.utils.unwrap", "modulename": "luisa_lang.utils", "qualname": "unwrap", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">opt</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.increment_lineno_and_col_offset", "modulename": "luisa_lang.utils", "qualname": "increment_lineno_and_col_offset", "kind": "function", "doc": "<p>Increment the line number and end line number of each node in the tree\nstarting at <em>node</em> by <em>n</em>. This is useful to \"move code\" to a different\nlocation in a file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">AST</span>, </span><span class=\"param\"><span class=\"n\">lineno</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">col_offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">AST</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.dedent_and_retrieve_indentation", "modulename": "luisa_lang.utils", "qualname": "dedent_and_retrieve_indentation", "kind": "function", "doc": "<p>Dedent the lines and return the indentation level of the first line.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lines</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.retrieve_ast_and_filename", "modulename": "luisa_lang.utils", "qualname": "retrieve_ast_and_filename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"nb\">object</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">AST</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.get_full_name", "modulename": "luisa_lang.utils", "qualname": "get_full_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.Span", "modulename": "luisa_lang.utils", "qualname": "Span", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "luisa_lang.utils.Span.__init__", "modulename": "luisa_lang.utils", "qualname": "Span.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "luisa_lang.utils.Span.file", "modulename": "luisa_lang.utils", "qualname": "Span.file", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, {"fullname": "luisa_lang.utils.Span.start", "modulename": "luisa_lang.utils", "qualname": "Span.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[int, int]"}, {"fullname": "luisa_lang.utils.Span.end", "modulename": "luisa_lang.utils", "qualname": "Span.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[int, int]"}, {"fullname": "luisa_lang.utils.Span.from_ast", "modulename": "luisa_lang.utils", "qualname": "Span.from_ast", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ast</span><span class=\"p\">:</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">AST</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.print_yellow", "modulename": "luisa_lang.utils", "qualname": "print_yellow", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.print_red", "modulename": "luisa_lang.utils", "qualname": "print_red", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.show_warning", "modulename": "luisa_lang.utils", "qualname": "show_warning", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">span</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">luisa_lang</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Span</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.get_union_args", "modulename": "luisa_lang.utils", "qualname": "get_union_args", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">union</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.get_typevar_constrains_and_bounds", "modulename": "luisa_lang.utils", "qualname": "get_typevar_constrains_and_bounds", "kind": "function", "doc": "<p>Find the constraints and bounds of a TypeVar.\nOnly one of the two can be present.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\">t: &lt;class &#x27;TypeVar&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.checked_cast", "modulename": "luisa_lang.utils", "qualname": "checked_cast", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.unique_hash", "modulename": "luisa_lang.utils", "qualname": "unique_hash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "luisa_lang.utils.round_to_align", "modulename": "luisa_lang.utils", "qualname": "round_to_align", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();